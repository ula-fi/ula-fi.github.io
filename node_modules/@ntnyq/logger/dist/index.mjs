import c from 'picocolors';
export { default as c } from 'picocolors';
import dayjs from 'dayjs';
export { default as dayjs } from 'dayjs';

const defaultOptions = {
  prefix: ``,
  type: true,
  enable: true,
  mode: `dev`,
  time: false
};
const defaultTimeFormat = `YYYY-MM-DD HH:mm:ss`;
function resolveOptions(options) {
  if (options?.time === true) {
    options.time = defaultTimeFormat;
  }
  return { ...defaultOptions, ...options };
}

const createLogger = (options) => {
  const opts = resolveOptions(options);
  return {
    debug(msg) {
      if (opts.mode === `prod`)
        return;
      this.log(`debug`, msg);
    },
    success(msg) {
      this.log(`success`, msg);
    },
    warn(msg) {
      this.log(`warn`, msg);
    },
    error(msg) {
      this.log(`error`, msg);
    },
    info(msg) {
      this.log(`info`, msg);
    },
    log(type, msg) {
      if (!opts.enable)
        return;
      const color = {
        success: `green`,
        warn: `yellow`,
        error: `red`,
        info: `blue`,
        debug: `cyan`
      };
      const typeColor = color[type];
      const typeName = `[${type}]`;
      const content = [];
      if (opts.prefix)
        content.push(opts.prefix);
      if (opts.time)
        content.push(c.magenta(dayjs().format(opts.time)));
      if (opts.type) {
        content.push(c[typeColor](typeName));
        content.push(msg);
      } else {
        content.push(c[typeColor](msg));
      }
      console.log(...content);
    }
  };
};

const index = createLogger();

export { createLogger, index as default, resolveOptions };
